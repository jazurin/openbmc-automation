[tox]
skipsdist = True

[testenv]
passenv = *
setenv =
    ARG_FILE={env:ARG_FILE:/tmp/argument_file.txt}
    PYTHONWARNINGS="ignore:Unverified HTTPS request"
    OPENBMC_PASSWORD=0penBmc
    OPENBMC_USERNAME=root
    SYSLOG_IP_ADDRESS=127.0.0.1
    SYSLOG_PORT=514
whitelist_externals = *
install_command = pip install -U {opts} {packages}
deps = -r{toxinidir}/requirements.txt
commands =
    bash {toxinidir}/tools/generate_argumentfile.sh
    python -m robot.run --exclude reboot_tests --argumentfile {env:ARG_FILE:/tmp/argument_file.txt} {posargs}

[testenv:full]
deps = {[testenv]deps}
setenv = {[testenv]setenv}
commands =
    bash {toxinidir}/tools/generate_argumentfile.sh
    python -m robot.run --exclude reboot_tests --argumentfile {env:ARG_FILE:/tmp/argument_file.txt} .

[testenv:tests]
deps = {[testenv]deps}
setenv = {[testenv]setenv}
commands =
    bash {toxinidir}/tools/generate_argumentfile.sh
    python -m robot.run --exclude reboot_tests --argumentfile {env:ARG_FILE:/tmp/argument_file.txt} tests

[testenv:custom]
deps = {[testenv]deps}
setenv = {[testenv]setenv}
commands =
    bash {toxinidir}/tools/generate_argumentfile.sh
    python -m robot.run --exclude reboot_tests --argumentfile {env:ARG_FILE:/tmp/argument_file.txt} {posargs}

[testenv:barreleye]
deps     = {[testenv]deps}
setenv   = {[testenv]setenv}
    OPENBMC_MODEL=./data/Barreleye.py
commands =
    bash {toxinidir}/tools/generate_argumentfile.sh
    python -m robot.run --exclude reboot_tests --argumentfile {env:ARG_FILE:/tmp/argument_file.txt} {posargs}

[testenv:palmetto]
deps     = {[testenv]deps}
setenv   = {[testenv]setenv}
    OPENBMC_MODEL=./data/Palmetto.py
commands =
    bash {toxinidir}/tools/generate_argumentfile.sh
    python -m robot.run --exclude reboot_tests --argumentfile {env:ARG_FILE:/tmp/argument_file.txt} {posargs}

[testenv:firestone]
deps     = {[testenv]deps}
setenv   = {[testenv]setenv}
    OPENBMC_MODEL=./data/Firestone.py
commands =
    bash {toxinidir}/tools/generate_argumentfile.sh
    python -m robot.run --exclude reboot_tests --argumentfile {env:ARG_FILE:/tmp/argument_file.txt} {posargs}

[testenv:Garrison]
deps     = {[testenv]deps}
setenv   = {[testenv]setenv}
    OPENBMC_MODEL=./data/Garrison.py
commands =
    bash {toxinidir}/tools/generate_argumentfile.sh
    python -m robot.run --exclude reboot_tests --argumentfile {env:ARG_FILE:/tmp/argument_file.txt} {posargs}
